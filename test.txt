ADDIU $1, $0, 0x0004 #Initial immediate addition test
ADDU $2, $1, $1 #Forwarding from mem stage test
ADDU $3, $1, $1 #Forwarding from wb stage test
ADDU $4, $1, $1 #Clock Hack test

ORI $5, $0, 0xFFFF #MOV tests
MOVN $10, $5, $0 #MOVN test when rt is 0 (register remains unchanged)
ADDU $14, $2, $10 #Hazard test - check that forwarding does not occur when WE is 0
MOVN $11, $5, $2 #MOVN test when rt is not 0 (register is set to the value of register 5)
MOVZ $12, $5, $2 #MOVZ test when rt is not 0 (register remains unchanged
MOVZ $13, $5, $0 #MOVZ test when rt is 0 (register is set to the value of register 5)

ORI $20, $0, 0x1A90 #Set Less Than Immediate S/U Tests
ORI $21, $0, 0x2C4F
ANDI $22, $20, 0xAC22
SLTI $23, $20, 0x2C3F #$23 should contain 1 after this operation
SLTI $24, $21, 0x1A90 #$24 should contain 0 after this operation
SLTI $25, $20, 0x8000 #$25 should contain 0 after this operation
SLTI $26, $22, 0x2C4F #$26 should contain 1 after this operation
SLTIU $27, $20, 0x2C4F #$27 should contain 1 after this operation
SLTIU $28, $20, 0x8000 #$28 should contain 1 after this operation
ADDIU $20, $20, 0x8000
XORI $29, $20, 0x8000

LUI $11, 0xFFFF
ADDIU $13, $0, 0x0001
SLL $13, $13, 0x10
ADDU $14, $11, $13 #should get 0
OR $14, $14, $22
LUI $15, 0xA1B2
OR $16, $15, $14

ADDIU $0, $21, 0xFFFF #Trying to write to 0
ADDU $1, $0, $1 #Hazard Checking - check that forwarding does not occur when writing to $0
LUI $0, 0xABCD

AND $1, $1, $0 #Prepping registers for register arithmetic tests
AND $2, $2, $0
AND $3, $3, $0
AND $4, $4, $0
AND $5, $5, $0

LUI $1, 0xFACE #Setting lowest 16 bits, testing LUI
LUI $2, 0x1ABC
LUI $3, 0xBEEF
LUI $4, 0x6282
LUI $5, 0x3CA9
SRL $1, $1, 0x10 #Also testing SRL
SRL $2, $2, 0x10
SRL $3, $3, 0x10
SRL $4, $4, 0x10
SRL $5, $5, 0x10

LUI $6, 0xECAF #Setting highest 16 bits
LUI $7, 0x23AB
LUI $8, 0x6FEA
LUI $9, 0x9873
LUI $10, 0xAAB1
OR $1, $6, $1 #$1 should be 0xECAFFACE
OR $2, $7, $2 #$2 should be 0x23AB1ABC
OR $3, $8, $3 #$3 should be 0x6FEABEEF
OR $4, $9, $4 #$4 should be 0x98736282
OR $5, $10, $5 #$5 should be 0xAAB13CA9

ADDU $6, $1, $2 #Addition Tests - $6 should have value 0x105B158A
ADDU $7, $1, $3 #$7 should have value 0x5C9AB9BD
ADDU $8, $3, $5 #$8 should have value 0x1A9BFB98
ADDU $9, $4, $5 #$9 should have value 0x43249F2B
ADDU $10, $2, $2 #$10 should have value 0x47563578

SUBU $11, $1, $2 #Subtraction Tests - $11 should have value 0xC904E012
SUBU $12, $2, $1 #$12 should have value 0x36FB1FEE
SUBU $13, $4, $5 #$13 should have value 0xEDC225D9
SUBU $14, $4, $3 #$14 should have value 0x2888A393
SUBU $15, $2, $2 #$15 should have value 0x00000000

AND $16, $1, $1 #And Tests - $16 should have value 0xECAFFACE
AND $17, $1, $5 #$17 should have value 0xA8A13888
AND $18, $2, $3 #$18 should have value 0x23AA1AAC
AND $19, $4, $3 #$19 should have value 0x08622282
AND $20, $5, $4 #$20 should have value 0x88312080

OR $21, $1, $2 #OR Tests - $21 should have value 0xEFAFFAFE
OR $22, $3, $3 #$22 should have value 0x6FEABEEF
OR $23, $4, $3 #$23 should have value 0xFFFBFEEF
OR $24, $5, $4 #$24 should have value 0xBAF37EAB
OR $25, $5, $1 #$25 should have value 0xEEBFFEEF

XOR $26, $2, $5 #XOR Tests - $26 should have value 0x891A2615
XOR $27, $3, $3 #$27 should have value 0x00000000
XOR $28, $4, $1 #$28 should have value 0x74DC984C
XOR $29, $1, $2 #$29 should have value 0xCF04E072
XOR $30, $2, $4 #$30 should have value 0xBBD8283E

NOR $6, $2, $3 #NOR Tests - $6 should have value 0x90144100
NOR $7, $1, $1 #$7 should have value 0x13500531
NOR $8, $5, $1 #$8 should have value 0x11400110
NOR $9, $3, $3 #$9 should have value 0x90154110
NOR $10, $4, $2 #$10 should have value 0x44048541

SLT $11, $1, $4 #SLT Tests - $11 should be 0x0
SLT $12, $2, $3 #$12 should be 0x1
SLT $13, $4, $3 #$13 should be 0x1
SLT $14, $5, $1 #$14 should be 0x1
SLT $15, $4, $5 #$15 should be 0x1

SLTU $16, $1, $4 #SLTU Tests - $16 should be 0x0
SLTU $17, $2, $3 #$17 should be 0x1
SLTU $18, $4, $3 #$18 should be 0x0
SLTU $19, $5, $1 #$19 should be 0x1
SLTU $20, $2, $4 #$20 should be 0x1

SLL $21, $1, 0x11 #SLL Tests - $21 should have value 0xF59C0000
SLL $22, $2, 0x1F #$22 should have value 0x00000000
SLL $23, $3, 0x05 #$23 should have value 0xFD57DDE0
SLL $24, $4, 0x01 #$24 should have value 0x30E6C504
SLL $25, $5, 0x12 #$25 should have value 0xF2A40000

SRL $26, $1, 0x11 #SRL Tests - $26 should have value 0x00007657
SRL $27, $2, 0x1F #$27 should have value 0x00000000
SRL $28, $3, 0x05 #$28 should have value 0x037F55F7
SRL $29, $4, 0x01 #$29 should have value 0x4C39B141
SRL $30, $5, 0x12 #$30 should have value 0x00002AAC

SRA $6, $1, 0x11 #SRA Tests - $6 should have value 0xFFFFF657
SRA $7, $2, 0x1F #$7 should have value 0x00000000
SRA $8, $3, 0x05 #$8 should have value 0x037F55F7
SRA $9, $4, 0x01 #$9 should have value 0xCC39B141
SRA $10, $5, 0x12 #$10 should have value 0xFFFFEAAC

SLLV $11, $1, $2 #SLLV Tests - $11 should have value 0xE0000000
SLLV $12, $2, $3 #$12 should have value 0x8D5E0000
SLLV $13, $3, $4 #$13 should have value 0xBFAAFBBC
SLLV $14, $4, $5 #$14 should have value 0xE6C50400
SLLV $15, $5, $1 #$15 should have value 0x4F2A4000

SRLV $16, $1, $2 #SRLV Tests - $16 should have value 0x0000000E
SRLV $17, $2, $3 #$17 should have value 0x00004756
SRLV $18, $3, $4 #$18 should have value 0x1BFAAFBB
SRLV $19, $4, $5 #$19 should have value 0x004C39B1
SRLV $20, $5, $1 #$20 should have value 0x0002AAC4

SRAV $21, $1, $2 #SRLV Tests - $21 should have value 0xFFFFFFFE
SRAV $22, $2, $3 #$22 should have value 0x00004756
SRAV $23, $3, $4 #$23 should have value 0x1BFAAFBB
SRAV $24, $4, $5 #$24 should have value 0xFFCC39B1
SRAV $25, $5, $1 #$25 should have value 0xFFFEAAC4

ADDIU $26, $1, 0xABCD #ADDIU Tests - $26 should have value 0xECAFA69B
ADDIU $27, $2, 0x023F #$27 should have value 0x23AB1CFB
ADDIU $28, $3, 0x7777 #$28 should have value 0x6FEB3666
ADDIU $29, $4, 0xF1AA #$29 should have value 0x9873542C
ADDIU $30, $5, 0x1234 #$30 should have value 0xAAB14EDD

ANDI $6, $1, 0xABCD #ANDI Tests - $6 should have value 0xECAFAACC
ANDI $7, $2, 0x023F #$7 should have value 0x0000023C
ANDI $8, $3, 0x7777 #$8 should have value 0x00003667
ANDI $9, $4, 0xF1AA #$9 should have value 0x98736082
ANDI $10, $5, 0x1234 #$10 should have value 0x00001020

ORI $11, $1, 0xABCD #ORI Tests - $11 should have value 0xFFFFFBCF
ORI $12, $2, 0x023F #$12 should have value 0x23AB1ABF
ORI $13, $3, 0x7777 #$13 should have value 0x6FEAFFFF
ORI $14, $4, 0xF1AA #$14 should have value 0xFFFFF3aa
ORI $15, $5, 0x1234 #$15 should have value 0xAAB13EBD

XORI $16, $1, 0xABCD #XORI Tests - $16 should have value 0x13505103
XORI $17, $2, 0x023F #$17 should have value 0x23AB1883
XORI $18, $3, 0x7777 #$18 should have value 0x6FEAC998
XORI $19, $4, 0xF1AA #$19 should have value 0x678C9328
XORI $20, $5, 0x1234 #$20 should have value 0xAAB12E9D

AND $1, $1, $0
J 0x0 #Tests for unimplemented instructions - should run as no-ops
JR $1
JAL 8
ADDU $31, $31, $0 #Check that forwarding does not occur with unimplemented operations
JALR $1
BEQ $1, $1, 8
BNE $1, $2, 8
BLEZ $1, 8
BGTZ $2, 8
BLTZ $1, 8
BGEZ $2, 8
LW $1, 8($2)
ADDU $31, $1, $0 #Check that forwarding does not occur with unimplemented operations
ADDU $31, $1, $0 #Check that forwarding does not occur with unimplemented operations
LB $1, 8($2)
LBU $1, 8($2)
SW $1, 8($2)
SB $1, 8($2)



